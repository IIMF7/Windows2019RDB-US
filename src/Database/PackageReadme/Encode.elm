module Database.PackageReadme.Encode exposing (..)

{-| Generated by <https://github.com/pravdomil/Elm-JSON-Interop>.
-}

import Database.PackageReadme as A 
import Json.Encode as E 
import Utils.Json.Encode_ as E_ exposing (Encoder)
import Elm.Module.NameDict.Encode  
import Elm.Docs.Encode  
import Elm.Docs.Encode  
import Elm.Docs.Encode  
import Elm.Docs.Encode  

packageReadme : Encoder A.PackageReadme
packageReadme  =
    \v1 -> (E.object) ([("readme"
    , ((E.string)) (v1.readme))
    , ("modules"
    , ((Elm.Module.NameDict.Encode.nameDict) ((moduleReadme))) (v1.modules))])

moduleReadme : Encoder A.ModuleReadme
moduleReadme  =
    \v1 -> (E.object) ([("readme"
    , ((E.string)) (v1.readme))
    , ("unions"
    , ((E_.dict) ((E.string)) ((Elm.Docs.Encode.union))) (v1.unions))
    , ("aliases"
    , ((E_.dict) ((E.string)) ((Elm.Docs.Encode.alias))) (v1.aliases))
    , ("values"
    , ((E_.dict) ((E.string)) ((Elm.Docs.Encode.value))) (v1.values))
    , ("binops"
    , ((E_.dict) ((E.string)) ((Elm.Docs.Encode.binop))) (v1.binops))])