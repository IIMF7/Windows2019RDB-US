module Database.PackageReadme.Decode exposing (..)

{-| Generated by <https://github.com/pravdomil/Elm-JSON-Interop>.
-}

import Database.PackageReadme as A 
import Json.Decode as D exposing (Decoder)
import Utils.Json.Decode_ as D_ 
import Elm.Module.NameDict.Decode  
import Elm.Docs.Decode  
import Elm.Docs.Decode  
import Elm.Docs.Decode  
import Elm.Docs.Decode  

packageReadme : Decoder A.PackageReadme
packageReadme  =
    (D.map2) (\v1 v2 -> {readme = v1
    , modules = v2}) ((D.field) ("readme") ((D.string))) ((D.field) ("modules") ((Elm.Module.NameDict.Decode.nameDict) ((moduleReadme))))

moduleReadme : Decoder A.ModuleReadme
moduleReadme  =
    (D.map5) (\v1 v2 v3 v4 v5 -> {readme = v1
    , unions = v2
    , aliases = v3
    , values = v4
    , binops = v5}) ((D.field) ("readme") ((D.string))) ((D.field) ("unions") ((D_.dict) ((D.string)) ((Elm.Docs.Decode.union)))) ((D.field) ("aliases") ((D_.dict) ((D.string)) ((Elm.Docs.Decode.alias)))) ((D.field) ("values") ((D_.dict) ((D.string)) ((Elm.Docs.Decode.value)))) ((D.field) ("binops") ((D_.dict) ((D.string)) ((Elm.Docs.Decode.binop))))