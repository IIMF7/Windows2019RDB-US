module Elm.Project.Decode exposing (..)

{-| Generated by elm-json-interop.
-}

import Elm.Module.Decode
import Elm.Project as A
import Json.Decode as D exposing (Decoder)
import Utils.Json.Decode_ as D_


exposed : Decoder A.Exposed
exposed =
    D.field "_" D.int
        |> D.andThen
            (\i___ ->
                case i___ of
                    0 ->
                        D.map A.ExposedList (D.field "a" (D.list Elm.Module.Decode.name))

                    1 ->
                        D.map A.ExposedDict (D.field "a" (D.list (D_.tuple D.string (D.list Elm.Module.Decode.name))))

                    _ ->
                        D.fail ("I can't decode \"Exposed\", unknown variant with index " ++ String.fromInt i___ ++ ".")
            )
